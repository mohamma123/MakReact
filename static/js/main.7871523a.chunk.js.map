{"version":3,"sources":["components/Fullpage.js","sections/TitlesSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","components/Toggle.js","components/DarkModeToggle.js","App.js","registerServiceWorker.js","index.js"],"names":["Fullpage","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","children","props","react_default","a","createElement","className","concat","Snowfall_default","Component","TitlesSection","_this","call","state","color","changeColor","bind","assertThisInitialized","setState","src_components_Fullpage","data","title","subtitle","keys","links","map","react_social_icons","url","AboutSection","sections","items","p","content","SkillCard","skill","src","image","eachSkill","src_components_SkillCard","Toggle","_ref","checked","onChange","type","id","htmlFor","DarkModeToggle","darkMode","useDarkMode","onClick","disable","components_Toggle","toggle","enable","App","components_DarkModeToggle","Menu","menuButton","MenuButton","transition","MenuItem","window","scrollTo","top","left","behavior","src_sections_TitlesSection","src_sections_AboutSection","sections_SkillSection","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7871523a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Fullpage.css'\nimport Snowfall from 'react-snowfall'\n\nclass Fullpage extends Component {\n    render() {\n        \n        const { children } = this.props\n        return (\n            <div className={`fullpage ${this.props.className || ''}`}>\n               <Snowfall />\n                {children}\n                \n            </div>\n        )\n    }\n}\n\nexport default Fullpage","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport { SocialIcon } from \"react-social-icons\";\nimport \"./TitlesSection.css\";\nimport Snowfall from 'react-snowfall'\n\n\nclass TitlesSection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      color: \"cyan\"\n    };\n    this.changeColor = this.changeColor.bind(this);\n  }\n\n  changeColor() {\n    this.setState({\n      color: this.state.color === \"cyan\" ? \"yellow\" : \"cyan\"\n    });\n  }\n\n  render() {\n    return (\n\n        <Fullpage className=\"content\">\n          \n          <h1\n            className=\"title\"\n    //        style={{\n      //        color: this.state.color\n        //    }}\n          //  onMouseOver={this.changeColor}\n           // onMouseLeave={() => {\n            //  this.changeColor();\n           // }}\n          >\n            {data.title}\n          </h1>\n          <div>\n            <h2>{data.subtitle}</h2>\n          </div>\n          <div className=\"icons-wrapper\">\n            {Object.keys(data.links).map(key => {\n              return (\n                <div className=\"icon\">\n                  <SocialIcon url={data.links[key]} />\n                </div>\n              );\n            })}\n          </div>\n        </Fullpage>\n\n    );\n  }\n}\n\nexport default TitlesSection;\n","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport './AboutSection.css'\n\n\nclass AboutSection extends Component {\n  render() {\n    return (\n      <Fullpage className=\"content\">\n        \n           <h3>{data.sections[0].title}</h3>\n        \n        <div>\n          {data.sections[0].items.map(p => {\n            return <p>{p.content}</p>;\n          })}\n        </div>\n      </Fullpage>\n\n    );\n  }\n}\n\nexport default AboutSection;\n","import React, { Component } from \"react\";\nimport \"./SkillCard.css\";\n\nclass SkillCard extends Component {\n  render() {\n    const { skill } = this.props;\n    return (\n      <div className=\"card\">\n        <div className=\"image-wrapper\">\n          <img src={skill.content.image} />\n        </div>\n        <div className=\"skill-title-wrapper\">\n          <h4>{skill.content.title}</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SkillCard;\n","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport SkillCard from '../components/SkillCard';\nimport Snowfall from 'react-snowfall'\nimport \"./SkillSection.css\";\n\nclass AboutSection extends Component {\n  render() {\n    return (\n    \n      <Fullpage className=\"content\">\n           <Snowfall />\n        <h3>{data.sections[1].title}</h3>\n        <div className=\"cards-wrapper\">\n          {data.sections[1].items.map(eachSkill => {\n            return (\n              <SkillCard skill={eachSkill}/>\n            );\n          })}\n        </div>\n      </Fullpage>\n\n    );\n  }\n}\n\nexport default AboutSection;\n","import React from 'react';\r\n\r\nconst Toggle = ({ checked, onChange }) => (\r\n  <span className=\"toggle-control\">\r\n    <input\r\n      className=\"dmcheck\"\r\n      type=\"checkbox\"\r\n      checked={checked}\r\n      onChange={onChange}\r\n      id=\"dmcheck\"\r\n    />\r\n    <label htmlFor=\"dmcheck\" />\r\n  </span>\r\n);\r\n\r\nexport default Toggle;","import React from 'react';\r\n\r\nimport Toggle from './Toggle';\r\nimport useDarkMode from 'use-dark-mode';\r\n\r\nconst DarkModeToggle = () => {\r\n  const darkMode = useDarkMode(false);\r\n\r\n  return (\r\n    <div className=\"dark-mode-toggle\">\r\n      <button type=\"button\" onClick={darkMode.disable}>\r\n        ☀\r\n      </button>\r\n      <Toggle checked={darkMode.value} onChange={darkMode.toggle} />\r\n      <button type=\"button\" onClick={darkMode.enable}>\r\n        ☾\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DarkModeToggle;","import React, {Component} from \"react\";\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\nimport '@szhsin/react-menu/dist/transitions/slide.css';\nimport TitlesSection from \"./sections/TitlesSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport DarkModeToggle from './components/DarkModeToggle';\nimport Snowfall from 'react-snowfall'\n\n\n\nimport \"./App.css\";\n\n\nclass App extends Component {\n  render() {\n\n    return (\n      \n      <div className=\"App\">\n\n        <div className=\"navbar\" />\n        \n        <DarkModeToggle />\n        <div className=\"menubar\">\n     \n        <Menu menuButton={<MenuButton>Open menu</MenuButton>} transition>\n\n\n      <MenuItem onClick={() => { window.scrollTo({top: 0, left: 0, behavior: 'smooth'}); }}>Top</MenuItem>\n    \n      <MenuItem onClick={() => { window.scrollTo({top: 800, left: 0, behavior: 'smooth'}); }}>About Me</MenuItem>\n   \n      <MenuItem onClick={() => { window.scrollTo({top: 2000, left: 0, behavior: 'smooth'}); }}>Skills</MenuItem>\n \n    </Menu>\n    \n      </div>\n        <TitlesSection />\n        <AboutSection />\n        <SkillSection />\n       \n\n\n      </div>\n\n);\n  }\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}